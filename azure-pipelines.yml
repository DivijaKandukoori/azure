stages:
- stage: PackagePublish
  displayName: 'Package & Publish'
  jobs:
  - job: PackagePublish
    displayName: 'Package & Publish'
    steps:
      # - task: Docker@2
      #   displayName: 'Login to Artifactory - Dockerhub remote'
      #   inputs:
      #     command: login
      #     containerRegistry: sampleapi-dockerhub-remote-service
      
      - task: Docker@2
        inputs:
          command: 'build'
          Dockerfile: '**/Dockerfile'
          arguments: '-t a-docker-local.jfrog.io/testapp:$(Build.BuildId)'
      - task: ArtifactoryDocker@1
        inputs:
          command: 'push'
          artifactoryService: 'divija-gpg'
          targetRepo: 'a-docker-local'
          imageName: 'a-docker-local.jfrog.io/testapp:$(Build.BuildId)'
          collectBuildInfo: true
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
          includeEnvVars: true
      - task: ArtifactoryPublishBuildInfo@1
        inputs:
          artifactoryService: 'divija-gpg'
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
      - task: ArtifactoryXrayScan@1
        inputs:
          artifactoryService: 'divija-gpg'
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
          allowFailBuild: false
      - task: ArtifactoryBuildPromotion@1
        inputs:
          artifactoryService: 'divija-gpg'
          buildName: '$(Build.DefinitionName)'
          buildNumber: '$(Build.BuildNumber)'
          targetRepo: 'ae-docker-dev-local'
          status: 'Released'
          sourceRepo: 'a-docker-local'
          includeDependencies: false
          copy: false
          dryRun: false
